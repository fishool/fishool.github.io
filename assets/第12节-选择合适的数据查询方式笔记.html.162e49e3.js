import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as n,a as e,b as l,f as r,d as a,r as c}from"./app.5f15ca94.js";const d={},o=e("h1",{id:"第12节-选择合适的数据查询方式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#第12节-选择合适的数据查询方式","aria-hidden":"true"},"#"),l(" 第12节-选择合适的数据查询方式")],-1),u=e("h2",{id:"官网文档",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#官网文档","aria-hidden":"true"},"#"),l(" 官网文档")],-1),_={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-your-data.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html",target:"_blank",rel:"noopener noreferrer"},b=a('<blockquote><p>Elastic 数据检索能力很强, 根据数据类型的不同, 查询方式也有所不同. es存储内容</p></blockquote><ul><li>es原文档存储 =&gt; 索引 _source 属性</li><li>luncene 存储 =&gt; 字段 store 属性</li><li>字段检索索引存储 =&gt; 字段 index 属性</li><li>列式文档存储 =&gt; 字段 doc_value属性</li></ul><h2 id="get-方式查询" tabindex="-1"><a class="header-anchor" href="#get-方式查询" aria-hidden="true">#</a> GET 方式查询</h2><ul><li>GET /{index}/_search</li><li id="">GET /{index}/_doc/</li><li id="">GET /{index}/_source/</li></ul><h3 id="track-total-hits" tabindex="-1"><a class="header-anchor" href="#track-total-hits" aria-hidden="true">#</a> track_total_hits</h3>',5),m={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-your-data.html#track-total-hits",target:"_blank",rel:"noopener noreferrer"},p=e("br",null,null,-1),g=a(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET kibana_sample_data_logs/_search
{
  &quot;track_total_hits&quot;: true
}

GET kibana_sample_data_logs/_doc/oeHAUIQBOaAfMGjE0nTY
GET kibana_sample_data_logs/_source/oeHAUIQBOaAfMGjE0nTY


# 多条查询
GET /kibana_sample_data_logs/_mget
{
    &quot;ids&quot;:[
        &quot;oeHAUIQBOaAfMGjE0nTY&quot;,
        &quot;ouHAUIQBOaAfMGjE0nTY&quot;
    ]
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="request-查询参数" tabindex="-1"><a class="header-anchor" href="#request-查询参数" aria-hidden="true">#</a> Request 查询参数</h3><p><strong>URL 参数</strong></p><ul><li>source，是否需要返回原始数据，可指定多个字段，也可以设置 false</li><li>source_includes，原始数据返回字段限制</li><li>source_excludes，原始数据返回字段限制</li><li>routing，分片路由字段</li><li>preference，分片选择，默认 RoundRobin 算法，可以选择 local优先本地，也可以选择自定义字符串</li><li>refresh，查询之前，可以设定索引强制刷新，取值返回 true,false，默认false</li><li>version，数据版本，通过此设置，控制数据返回是否已经被覆盖</li><li>version_type,数据版本类型，取值范围 internal,external,external gte; 默认interal, 详细参考数据写入课程</li><li>stored_fields，原始数据存储在 lucene 中，字段属性 store 设置为 true，默认false，未启用</li><li>realtime，数据是否实时返回，取值范围 true/false; 默认 true，不关心refresh 操作</li></ul><h3 id="实时性检查" tabindex="-1"><a class="header-anchor" href="#实时性检查" aria-hidden="true">#</a> 实时性检查</h3><ul><li>realtime: 实时性GET查询参数 true/false</li><li>refresh: 强制刷新索引 true/false</li><li>refresh_interval: 索引设置, 数据刷新间隔</li></ul><h2 id="search-dsl-查询" tabindex="-1"><a class="header-anchor" href="#search-dsl-查询" aria-hidden="true">#</a> Search DSL 查询</h2>`,7),v={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html",target:"_blank",rel:"noopener noreferrer"},x=a('<ul><li>Search 查询不是实时的，需要等待索引刷新后才能查询到数据</li><li>数值查询基于BKD树，字符串查询基于倒排索引 <img src="https://81.71.83.25/bucket/c178e664bd0e72eac1c60225f312aa1.png" alt="查询过程" loading="lazy"><img src="https://81.71.83.25/bucket/4b535223e2314113d2aafc12fac5692.png" alt="查询内部机制" loading="lazy"><img src="https://81.71.83.25/bucket/73e40bb1143cca062f690d51e690fbb.png" alt="请求分发过程" loading="lazy"><img src="https://81.71.83.25/bucket/35d8fb3659bb31588917ff60a8fe64f.png" alt="数据合并过程" loading="lazy"></li></ul><h3 id="request-查询参数-1" tabindex="-1"><a class="header-anchor" href="#request-查询参数-1" aria-hidden="true">#</a> Request 查询参数</h3><p><strong>URL 参数</strong></p><ul><li>request_cache，是否启动查询缓存在结果为0 时</li><li>from，起始数据位置</li><li>q，通过 URL输入查询条件</li><li>size，单页大小</li><li>sort，排序字段</li><li>routing，查询路由控制</li><li>batched_reduce_size，单分片返回数，默认512条就返回，无需等到全部查询完成</li><li>pre_filter_shard_size，单分片过滤限制，默认128</li><li>_source，返回原始数据控制</li><li>scroll，是否滚动快照查询</li><li>search_type，全局打分还是分片打分，默认分片打分</li><li>track_total_hits，是否返回总数量，7.0之后默认返回 10000 最多，与6.X不兼容</li><li>version，是否返回数据的版本号</li><li>_source，指定返回数据字段</li><li>_source_excludes，指定返回数据字段</li><li>_source_includes，指定返回数据字段</li><li>seq_no_primary_term，是否返回数据的主分片</li></ul><p><strong>max_concurrent_shard_request</strong></p><ul><li>默认值为5，表示并发查询分片数</li></ul><p><strong>preference</strong> preference 参数可以控制分片选择，可以选择 local优先本地，也可以选择自定义字符串</p>',7);function k(q,E){const i=c("ExternalLinkIcon");return s(),n("div",null,[o,u,e("p",null,[e("a",_,[l("官方文档"),r(i)]),e("a",h,[l("查询相关"),r(i)]),e("a",f,[l("Query DSL"),r(i)])]),b,e("p",null,[e("a",m,[l("官方文档"),r(i)]),l(" es 默认你只需要查询前10000条数据(性能), 如果你需要查询所有数据, 需要设置 track_total_hits 为 true"),p,l(" DSL 中 must 会根据匹配条件 计算分， filter 不会算分性能更好。")]),g,e("p",null,[e("a",v,[l("官方文档"),r(i)])]),x])}const G=t(d,[["render",k],["__file","第12节-选择合适的数据查询方式笔记.html.vue"]]);export{G as default};
